{"version":3,"sources":["components/filter/Filter.module.css","components/contactForm/ContactForm.module.css","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactList.js","Phonebook.js","App.js","reportWebVitals.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","ContactForm","name","number","onChange","onHandleAppend","nameId","numberId","className","s","forma","title","inputForm","type","pattern","required","value","id","formBtn","onClick","Filter","filter","filterInput","ContactList","contacts","onDelete","map","length","contact","contactBtn","Phonebook","useState","JSON","parse","window","localStorage","getItem","setContacts","setName","setNumber","setFilter","nameInputId","shortid","generate","numberInputId","useEffect","setItem","stringify","event","target","console","error","contactNew","undefined","find","toLowerCase","state","alert","normalizeFilter","includes","getFilterContacts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f15adea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1haKA\",\"filterInput\":\"Filter_filterInput__1sVzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"ContactForm_forma__S10uw\",\"title\":\"ContactForm_title__Ouzov\",\"inputForm\":\"ContactForm_inputForm__1AtM1\",\"formBtn\":\"ContactForm_formBtn__3yX6w\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nconst ContactForm = ({\n  name,\n  number,\n  onChange,\n  onHandleAppend,\n  nameId,\n  numberId,\n}) => {\n  return (\n    <form className={s.forma}>\n      <p className={s.title}>Name</p>\n      <input\n        className={s.inputForm}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={onChange}\n      />\n      <p className={s.title}>Number</p>\n      <input\n        className={s.inputForm}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={numberId}\n        onChange={onChange}\n      />\n      <button className={s.formBtn} type=\"button\" onClick={onHandleAppend}>\n        Add contact\n      </button>\n    </form>\n  );\n};\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onHandleAppend: PropTypes.func.isRequired,\n  nameId: PropTypes.string.isRequired,\n  numberId: PropTypes.string.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.filter}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(\n        ({ id, name, number }) =>\n          name.length > 0 &&\n          number.length > 0 && (\n            <li className={s.contact} key={id}>\n              {name}: {number}\n              <button\n                className={s.contactBtn}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ),\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/contactForm';\nimport Filter from './components/filter';\nimport ContactList from './components/contactList';\nexport default function Phonebook() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  const id = shortid.generate();\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.error();\n        return;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleAppend = () => {\n    const contactNew = { id, name, number };\n    const find = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    find === undefined\n      ? setContacts(state => (state = [contactNew, ...contacts]))\n      : alert(`${name} is alredy in contact`);\n    reset();\n  };\n  const getСontactSearch = event => {\n    setFilter(event.target.value);\n  };\n  const getFilterContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n  const deletContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm\n        name={name}\n        number={number}\n        onChange={handleChange}\n        onHandleAppend={handleAppend}\n        nameId={nameInputId}\n        numberId={numberInputId}\n      />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={getСontactSearch} />\n      <ContactList contacts={getFilterContacts()} onDelete={deletContact} />\n    </div>\n  );\n}\n","import Phonebook from './Phonebook';\n\nfunction App() {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3_4lD\",\"contactBtn\":\"ContactList_contactBtn__sXs9v\"};"],"sourceRoot":""}